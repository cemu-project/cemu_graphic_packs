#version 460

layout(set = 1, binding = 4, std140) uniform ufBlock
{
    ivec4 uf_remappedPS[2];
    vec4 uf_fragCoordScale;
} _253;

layout(set = 1, binding = 1) uniform sampler2D textureUnitPS2;
layout(set = 1, binding = 2) uniform sampler2D textureUnitPS3;
layout(set = 1, binding = 3) uniform sampler2D textureUnitPS4;
layout(set = 1, binding = 0) uniform sampler2D textureUnitPS0;

layout(location = 0) in vec4 passParameterSem133;
layout(location = 0) out vec4 passPixelColor0;

float mul_nonIEEE(float a, float b)
{
    return ((a != 0.0) && (b != 0.0)) ? (a * b) : 0.0;
}

int clampFI32(int v)
{
    if (v == 2147483647)
    {
        return floatBitsToInt(1.0);
    }
    else
    {
        if (v == (-1))
        {
            return floatBitsToInt(0.0);
        }
    }
    return floatBitsToInt(clamp(intBitsToFloat(v), 0.0, 1.0));
}

void main()
{
    ivec4 R0i = ivec4(0);
    ivec4 R1i = ivec4(0);
    ivec4 R2i = ivec4(0);
    ivec4 R3i = ivec4(0);
    ivec4 R4i = ivec4(0);
    ivec4 R5i = ivec4(0);
    ivec4 R6i = ivec4(0);
    ivec4 R7i = ivec4(0);
    ivec4 R8i = ivec4(0);
    ivec4 R9i = ivec4(0);
    ivec4 R10i = ivec4(0);
    ivec4 R11i = ivec4(0);
    ivec4 R12i = ivec4(0);
    ivec4 R13i = ivec4(0);
    ivec4 R14i = ivec4(0);
    ivec4 R15i = ivec4(0);
    ivec4 R16i = ivec4(0);
    ivec4 R123i = ivec4(0);
    ivec4 R124i = ivec4(0);
    ivec4 R125i = ivec4(0);
    ivec4 R126i = ivec4(0);
    ivec4 R127i = ivec4(0);
    int PV0ix = 0;
    int PV0iy = 0;
    int PV0iz = 0;
    int PV0iw = 0;
    int PV1ix = 0;
    int PV1iy = 0;
    int PV1iz = 0;
    int PV1iw = 0;
    int PS0i = 0;
    int PS1i = 0;
    ivec4 tempi = ivec4(0);
    ivec4 ARi = ivec4(0);
    bool predResult = true;
    R0i = floatBitsToInt(passParameterSem133);
    R5i = floatBitsToInt(textureLod(textureUnitPS2, vec2(intBitsToFloat(R0i.x), intBitsToFloat(R0i.y)), 0.0));
    ivec3 _131 = floatBitsToInt(textureLod(textureUnitPS3, vec2(intBitsToFloat(R0i.x), intBitsToFloat(R0i.y)), 0.0).xyz);
    R1i.x = _131.x;
    R1i.y = _131.y;
    R1i.z = _131.z;
    ivec3 _151 = floatBitsToInt(textureLod(textureUnitPS4, vec2(intBitsToFloat(R0i.z), intBitsToFloat(R0i.w)), 0.0).xyz);
    R2i.x = _151.x;
    R2i.y = _151.y;
    R2i.z = _151.z;
    ivec3 _169 = floatBitsToInt(texture(textureUnitPS0, vec2(intBitsToFloat(R0i.x), intBitsToFloat(R0i.y))).xyz);
    R11i.x = _169.x;
    R11i.y = _169.y;
    R11i.z = _169.z;
    R127i.x = floatBitsToInt((intBitsToFloat(R5i.x) * 14.0) + (-7.0));
    R127i.y = floatBitsToInt((intBitsToFloat(R5i.y) * 14.0) + (-7.0));
    PV0iz = 0;
    R127i.w = floatBitsToInt(intBitsToFloat(R1i.z) * 7.0);
    R126i.x = floatBitsToInt((intBitsToFloat(R1i.x) * 2.0) + (-1.0));
    tempi.x = floatBitsToInt(dot(vec4(intBitsToFloat(R127i.x), intBitsToFloat(R127i.y), intBitsToFloat(PV0iz), intBitsToFloat(int(0x80000000))), vec4(intBitsToFloat(R127i.x), intBitsToFloat(R127i.y), intBitsToFloat(R127i.y), 0.0)));
    PV1ix = tempi.x;
    PV1iy = tempi.x;
    PV1iz = tempi.x;
    PV1iw = tempi.x;
    R126i.w = floatBitsToInt((intBitsToFloat(R1i.y) * 2.0) + (-1.0));
    float param = intBitsToFloat(R126i.x);
    float param_1 = intBitsToFloat(_253.uf_remappedPS[0].z);
    R125i.x = floatBitsToInt(mul_nonIEEE(param, param_1));
    float param_2 = intBitsToFloat(R127i.w);
    float param_3 = intBitsToFloat(R2i.z);
    R10i.y = floatBitsToInt(mul_nonIEEE(param_2, param_3));
    float param_4 = intBitsToFloat(R126i.w);
    float param_5 = intBitsToFloat(_253.uf_remappedPS[0].w);
    R127i.z = floatBitsToInt(mul_nonIEEE(param_4, param_5));
    float param_6 = intBitsToFloat(R127i.w);
    float param_7 = intBitsToFloat(R2i.y);
    R3i.w = floatBitsToInt(mul_nonIEEE(param_6, param_7));
    float tempResultf = 1.0 / sqrt(intBitsToFloat(PV1ix));
    PS0i = floatBitsToInt(tempResultf);
    R10i.x = floatBitsToInt(min(intBitsToFloat(PS0i), 2.0));
    float param_8 = -intBitsToFloat(R10i.y);
    float param_9 = intBitsToFloat(R127i.z);
    R2i.y = floatBitsToInt(mul_nonIEEE(param_8, param_9) + intBitsToFloat(R0i.y));
    float param_10 = -intBitsToFloat(R10i.y);
    float param_11 = intBitsToFloat(R125i.x);
    R2i.z = floatBitsToInt(mul_nonIEEE(param_10, param_11) + intBitsToFloat(R0i.x));
    float param_12 = intBitsToFloat(R127i.w);
    float param_13 = intBitsToFloat(R2i.x);
    R2i.w = floatBitsToInt(mul_nonIEEE(param_12, param_13));
    float param_14 = intBitsToFloat(R10i.y);
    float param_15 = intBitsToFloat(R125i.x);
    R4i.x = floatBitsToInt(mul_nonIEEE(param_14, param_15) + intBitsToFloat(R0i.x));
    float param_16 = -intBitsToFloat(R2i.w);
    float param_17 = intBitsToFloat(R125i.x);
    R1i.x = floatBitsToInt(mul_nonIEEE(param_16, param_17) + intBitsToFloat(R0i.x));
    PV0iy = (intBitsToFloat(R10i.x) > intBitsToFloat(1059760867)) ? (-1) : 0;
    float param_18 = intBitsToFloat(R127i.y);
    float param_19 = intBitsToFloat(R10i.x);
    PV0iz = floatBitsToInt(mul_nonIEEE(param_18, param_19));
    float param_20 = intBitsToFloat(R127i.x);
    float param_21 = intBitsToFloat(R10i.x);
    PV0iw = floatBitsToInt(mul_nonIEEE(param_20, param_21));
    float param_22 = -intBitsToFloat(R2i.w);
    float param_23 = intBitsToFloat(R127i.z);
    R1i.y = floatBitsToInt(mul_nonIEEE(param_22, param_23) + intBitsToFloat(R0i.y));
    int _427;
    if (PV0iy == 0)
    {
        _427 = PV0iw;
    }
    else
    {
        _427 = R126i.x;
    }
    R2i.x = _427;
    float param_24 = intBitsToFloat(R2i.w);
    float param_25 = intBitsToFloat(R127i.z);
    R3i.y = floatBitsToInt(mul_nonIEEE(param_24, param_25) + intBitsToFloat(R0i.y));
    float param_26 = intBitsToFloat(R2i.w);
    float param_27 = intBitsToFloat(R125i.x);
    R3i.z = floatBitsToInt(mul_nonIEEE(param_26, param_27) + intBitsToFloat(R0i.x));
    int _468;
    if (PV0iy == 0)
    {
        _468 = PV0iz;
    }
    else
    {
        _468 = R126i.w;
    }
    R1i.w = _468;
    float param_28 = intBitsToFloat(R10i.y);
    float param_29 = intBitsToFloat(R127i.z);
    R4i.y = floatBitsToInt(mul_nonIEEE(param_28, param_29) + intBitsToFloat(R0i.y));
    R6i = floatBitsToInt(textureLod(textureUnitPS2, vec2(intBitsToFloat(R2i.z), intBitsToFloat(R2i.y)), 0.0));
    R7i = floatBitsToInt(textureLod(textureUnitPS2, vec2(intBitsToFloat(R1i.x), intBitsToFloat(R1i.y)), 0.0));
    R8i = floatBitsToInt(textureLod(textureUnitPS2, vec2(intBitsToFloat(R3i.z), intBitsToFloat(R3i.y)), 0.0));
    R9i = floatBitsToInt(textureLod(textureUnitPS2, vec2(intBitsToFloat(R4i.x), intBitsToFloat(R4i.y)), 0.0));
    ivec3 _542 = floatBitsToInt(textureLod(textureUnitPS0, vec2(intBitsToFloat(R2i.z), intBitsToFloat(R2i.y)), 0.0).xyz);
    R12i.x = _542.x;
    R12i.y = _542.y;
    R12i.z = _542.z;
    ivec3 _559 = floatBitsToInt(textureLod(textureUnitPS0, vec2(intBitsToFloat(R1i.x), intBitsToFloat(R1i.y)), 0.0).xyz);
    R14i.x = _559.x;
    R14i.y = _559.y;
    R14i.z = _559.z;
    ivec3 _576 = floatBitsToInt(textureLod(textureUnitPS0, vec2(intBitsToFloat(R3i.z), intBitsToFloat(R3i.y)), 0.0).xyz);
    R15i.x = _576.x;
    R15i.y = _576.y;
    R15i.z = _576.z;
    ivec3 _593 = floatBitsToInt(textureLod(textureUnitPS0, vec2(intBitsToFloat(R4i.x), intBitsToFloat(R4i.y)), 0.0).xyz);
    R16i.x = _593.x;
    R16i.y = _593.y;
    R16i.z = _593.z;
    R3i.x = _253.uf_remappedPS[1].x;
    R3i.y = _253.uf_remappedPS[1].y;
    float param_30 = intBitsToFloat(R1i.w);
    float param_31 = intBitsToFloat(_253.uf_remappedPS[0].w);
    PV0iz = floatBitsToInt(mul_nonIEEE(param_30, param_31));
    float param_32 = intBitsToFloat(R2i.x);
    float param_33 = intBitsToFloat(_253.uf_remappedPS[0].z);
    PV0iw = floatBitsToInt(mul_nonIEEE(param_32, param_33));
    R3i.z = 0;
    int backupReg0i = R0i.x;
    int backupReg1i = R0i.y;
    float param_34 = -intBitsToFloat(R3i.w);
    float param_35 = intBitsToFloat(PV0iw);
    R0i.x = floatBitsToInt(mul_nonIEEE(param_34, param_35) + intBitsToFloat(backupReg0i));
    float param_36 = -intBitsToFloat(R3i.w);
    float param_37 = intBitsToFloat(PV0iz);
    R0i.y = floatBitsToInt(mul_nonIEEE(param_36, param_37) + intBitsToFloat(backupReg1i));
    float param_38 = intBitsToFloat(R3i.w);
    float param_39 = intBitsToFloat(PV0iw);
    R0i.z = floatBitsToInt(mul_nonIEEE(param_38, param_39) + intBitsToFloat(backupReg0i));
    float param_40 = intBitsToFloat(R3i.w);
    float param_41 = intBitsToFloat(PV0iz);
    R0i.w = floatBitsToInt(mul_nonIEEE(param_40, param_41) + intBitsToFloat(backupReg1i));
    R2i.x = floatBitsToInt((intBitsToFloat(R6i.x) * 14.0) + (-7.0));
    R1i = floatBitsToInt(textureLod(textureUnitPS2, vec2(intBitsToFloat(R0i.x), intBitsToFloat(R0i.y)), 0.0));
    R4i = floatBitsToInt(textureLod(textureUnitPS2, vec2(intBitsToFloat(R0i.z), intBitsToFloat(R0i.w)), 0.0));
    ivec3 _725 = floatBitsToInt(textureLod(textureUnitPS0, vec2(intBitsToFloat(R0i.x), intBitsToFloat(R0i.y)), 0.0).xyz);
    R13i.x = _725.x;
    R13i.y = _725.y;
    R13i.z = _725.z;
    int _734 = R0i.z;
    int _737 = R0i.w;
    ivec3 _742 = floatBitsToInt(textureLod(textureUnitPS0, vec2(intBitsToFloat(_734), intBitsToFloat(_737)), 0.0).xyz);
    R0i.x = _742.x;
    R0i.y = _742.y;
    R0i.z = _742.z;
    R126i.x = floatBitsToInt((intBitsToFloat(R1i.x) * 14.0) + (-7.0));
    R123i.y = floatBitsToInt((intBitsToFloat(R6i.y) * 14.0) + (-7.0));
    PV0iz = 0;
    R126i.w = floatBitsToInt((intBitsToFloat(R1i.y) * 14.0) + (-7.0));
    R127i.z = 0;
    tempi.x = floatBitsToInt(dot(vec4(intBitsToFloat(R2i.x), intBitsToFloat(R123i.y), intBitsToFloat(PV0iz), intBitsToFloat(int(0x80000000))), vec4(intBitsToFloat(R2i.x), intBitsToFloat(R123i.y), intBitsToFloat(R123i.y), 0.0)));
    PV1ix = tempi.x;
    PV1iy = tempi.x;
    PV1iz = tempi.x;
    PV1iw = tempi.x;
    R127i.w = floatBitsToInt(max(-intBitsToFloat(R10i.y), intBitsToFloat(R10i.y)));
    tempi.x = floatBitsToInt(dot(vec4(-intBitsToFloat(R3i.x), -intBitsToFloat(R3i.y), -intBitsToFloat(R3i.z), -intBitsToFloat(R3i.z)), vec4(intBitsToFloat(R5i.z), intBitsToFloat(R5i.w), intBitsToFloat(R5i.w), intBitsToFloat(R5i.w))));
    PV0ix = tempi.x;
    PV0iy = tempi.x;
    PV0iz = tempi.x;
    R5i.w = tempi.x;
    tempResultf = 1.0 / sqrt(intBitsToFloat(PV1ix));
    R125i.x = floatBitsToInt(tempResultf);
    tempi.x = floatBitsToInt(dot(vec4(-intBitsToFloat(R3i.x), -intBitsToFloat(R3i.y), -intBitsToFloat(R3i.z), -intBitsToFloat(R3i.z)), vec4(intBitsToFloat(R6i.z), intBitsToFloat(R6i.w), intBitsToFloat(R6i.w), intBitsToFloat(R6i.w))));
    PV1ix = tempi.x;
    PV1iy = tempi.x;
    R126i.z = tempi.x;
    PV1iw = tempi.x;
    R127i.x = floatBitsToInt((intBitsToFloat(R7i.x) * 14.0) + (-7.0));
    tempi.x = floatBitsToInt(dot(vec4(intBitsToFloat(R126i.x), intBitsToFloat(R126i.w), intBitsToFloat(R127i.z), intBitsToFloat(int(0x80000000))), vec4(intBitsToFloat(R126i.x), intBitsToFloat(R126i.w), intBitsToFloat(R126i.w), 0.0)));
    PV0ix = tempi.x;
    PV0iy = tempi.x;
    PV0iz = tempi.x;
    R125i.w = tempi.x;
    R126i.w = floatBitsToInt(intBitsToFloat(R5i.w) + (-intBitsToFloat(PV1ix)));
    tempi.x = floatBitsToInt(dot(vec4(-intBitsToFloat(R3i.x), -intBitsToFloat(R3i.y), -intBitsToFloat(R3i.z), -intBitsToFloat(R3i.z)), vec4(intBitsToFloat(R1i.z), intBitsToFloat(R1i.w), intBitsToFloat(R1i.w), intBitsToFloat(R1i.w))));
    PV1ix = tempi.x;
    R125i.y = tempi.x;
    PV1iz = tempi.x;
    PV1iw = tempi.x;
    R127i.y = floatBitsToInt((intBitsToFloat(R7i.y) * 14.0) + (-7.0));
    backupReg0i = R125i.x;
    R125i.x = floatBitsToInt((-intBitsToFloat(R5i.w)) + intBitsToFloat(R126i.z));
    R126i.y = floatBitsToInt(((-intBitsToFloat(R126i.w)) * intBitsToFloat(1062557013)) + 1.0);
    int param_42 = R126i.y;
    R126i.y = clampFI32(param_42);
    PV0iz = 0;
    float param_43 = -intBitsToFloat(backupReg0i);
    float param_44 = intBitsToFloat(R127i.w);
    R127i.w = floatBitsToInt(mul_nonIEEE(param_43, param_44) + 1.0);
    int param_45 = R127i.w;
    R127i.w = clampFI32(param_45);
    R126i.w = floatBitsToInt(max(intBitsToFloat(R10i.x), intBitsToFloat(backupReg0i)));
    tempi.x = floatBitsToInt(dot(vec4(intBitsToFloat(R127i.x), intBitsToFloat(R127i.y), intBitsToFloat(PV0iz), intBitsToFloat(int(0x80000000))), vec4(intBitsToFloat(R127i.x), intBitsToFloat(R127i.y), intBitsToFloat(R127i.y), 0.0)));
    PV1ix = tempi.x;
    R124i.y = tempi.x;
    PV1iz = tempi.x;
    PV1iw = tempi.x;
    R1i.y = floatBitsToInt(1.0 / intBitsToFloat(R10i.y));
    tempi.x = floatBitsToInt(dot(vec4(-intBitsToFloat(R3i.x), -intBitsToFloat(R3i.y), -intBitsToFloat(R3i.z), -intBitsToFloat(R3i.z)), vec4(intBitsToFloat(R7i.z), intBitsToFloat(R7i.w), intBitsToFloat(R7i.w), intBitsToFloat(R7i.w))));
    PV0ix = tempi.x;
    PV0iy = tempi.x;
    R125i.z = tempi.x;
    PV0iw = tempi.x;
    tempResultf = 1.0 / sqrt(intBitsToFloat(R125i.w));
    R126i.z = floatBitsToInt(tempResultf);
    R127i.x = floatBitsToInt(intBitsToFloat(R5i.w) + (-intBitsToFloat(R125i.y)));
    R127i.y = floatBitsToInt(max(-intBitsToFloat(R3i.w), intBitsToFloat(R3i.w)));
    R123i.z = floatBitsToInt((intBitsToFloat(R8i.x) * 14.0) + (-7.0));
    R123i.w = floatBitsToInt((intBitsToFloat(R8i.y) * 14.0) + (-7.0));
    PS1i = 0;
    R124i.x = floatBitsToInt(dot(vec4(intBitsToFloat(R123i.z), intBitsToFloat(R123i.w), intBitsToFloat(PS1i), intBitsToFloat(int(0x80000000))), vec4(intBitsToFloat(R123i.z), intBitsToFloat(R123i.w), intBitsToFloat(R123i.w), 0.0)));
    PV0iy = R124i.x;
    PV0iz = R124i.x;
    PV0iw = R124i.x;
    float param_46 = intBitsToFloat(R126i.y);
    float param_47 = intBitsToFloat(R127i.w);
    R126i.x = floatBitsToInt(mul_nonIEEE(param_46, param_47));
    R126i.x = floatBitsToInt(intBitsToFloat(R126i.x) * 2.0);
    tempi.x = floatBitsToInt(dot(vec4(-intBitsToFloat(R3i.x), -intBitsToFloat(R3i.y), -intBitsToFloat(R3i.z), -intBitsToFloat(R3i.z)), vec4(intBitsToFloat(R8i.z), intBitsToFloat(R8i.w), intBitsToFloat(R8i.w), intBitsToFloat(R8i.w))));
    PV1ix = tempi.x;
    PV1iy = tempi.x;
    R8i.z = tempi.x;
    PV1iw = tempi.x;
    float param_48 = -intBitsToFloat(R10i.x);
    float param_49 = intBitsToFloat(R10i.y);
    R6i.w = floatBitsToInt(mul_nonIEEE(param_48, param_49) + 1.0);
    int param_50 = R6i.w;
    R6i.w = clampFI32(param_50);
    backupReg0i = R127i.x;
    backupReg1i = R127i.y;
    R127i.x = (intBitsToFloat(R1i.y) > intBitsToFloat(R126i.w)) ? (-1) : 0;
    R127i.y = floatBitsToInt((-intBitsToFloat(R5i.w)) + intBitsToFloat(R125i.y));
    R127i.z = floatBitsToInt(((-intBitsToFloat(R125i.x)) * intBitsToFloat(1062557013)) + 1.0);
    int param_51 = R127i.z;
    R127i.z = clampFI32(param_51);
    R126i.w = floatBitsToInt(((-intBitsToFloat(backupReg0i)) * intBitsToFloat(1062557013)) + 1.0);
    int param_52 = R126i.w;
    R126i.w = clampFI32(param_52);
    float param_53 = -intBitsToFloat(R126i.z);
    float param_54 = intBitsToFloat(backupReg1i);
    R127i.w = floatBitsToInt(mul_nonIEEE(param_53, param_54) + 1.0);
    int param_55 = R127i.w;
    R127i.w = clampFI32(param_55);
    R125i.x = floatBitsToInt(max(intBitsToFloat(R10i.x), intBitsToFloat(R126i.z)));
    R125i.y = floatBitsToInt(max(-intBitsToFloat(R2i.w), intBitsToFloat(R2i.w)));
    R126i.z = floatBitsToInt((intBitsToFloat(R4i.x) * 14.0) + (-7.0));
    R125i.w = floatBitsToInt(intBitsToFloat(R5i.w) + (-intBitsToFloat(R125i.z)));
    R7i.w = floatBitsToInt(1.0 / intBitsToFloat(R3i.w));
    float param_56 = intBitsToFloat(R6i.w);
    float param_57 = intBitsToFloat(R127i.z);
    R8i.x = floatBitsToInt(mul_nonIEEE(param_56, param_57) + intBitsToFloat(R126i.x));
    R123i.y = floatBitsToInt((intBitsToFloat(R4i.y) * 14.0) + (-7.0));
    PV0iz = 0;
    float param_58 = intBitsToFloat(R126i.w);
    float param_59 = intBitsToFloat(R127i.w);
    R127i.w = floatBitsToInt(mul_nonIEEE(param_58, param_59));
    R127i.w = floatBitsToInt(intBitsToFloat(R127i.w) * 2.0);
    tempResultf = 1.0 / sqrt(intBitsToFloat(R124i.y));
    R126i.x = floatBitsToInt(tempResultf);
    tempi.x = floatBitsToInt(dot(vec4(intBitsToFloat(R126i.z), intBitsToFloat(R123i.y), intBitsToFloat(PV0iz), intBitsToFloat(int(0x80000000))), vec4(intBitsToFloat(R126i.z), intBitsToFloat(R123i.y), intBitsToFloat(R123i.y), 0.0)));
    PV1ix = tempi.x;
    PV1iy = tempi.x;
    R7i.z = tempi.x;
    PV1iw = tempi.x;
    R6i.x = floatBitsToInt(1.0 / intBitsToFloat(R2i.w));
    tempi.x = floatBitsToInt(dot(vec4(-intBitsToFloat(R3i.x), -intBitsToFloat(R3i.y), -intBitsToFloat(R3i.z), -intBitsToFloat(R3i.z)), vec4(intBitsToFloat(R4i.z), intBitsToFloat(R4i.w), intBitsToFloat(R4i.w), intBitsToFloat(R4i.w))));
    PV0ix = tempi.x;
    R8i.y = tempi.x;
    PV0iz = tempi.x;
    PV0iw = tempi.x;
    float param_60 = -intBitsToFloat(R10i.x);
    float param_61 = intBitsToFloat(R3i.w);
    R6i.z = floatBitsToInt(mul_nonIEEE(param_60, param_61) + 1.0);
    int param_62 = R6i.z;
    R6i.z = clampFI32(param_62);
    backupReg0i = R125i.z;
    R4i.x = (intBitsToFloat(R7i.w) > intBitsToFloat(R125i.x)) ? (-1) : 0;
    R127i.y = floatBitsToInt(((-intBitsToFloat(R127i.y)) * intBitsToFloat(1062557013)) + 1.0);
    int param_63 = R127i.y;
    R127i.y = clampFI32(param_63);
    R125i.z = (R127i.x == 0) ? 0 : 1065353216;
    R125i.w = floatBitsToInt(((-intBitsToFloat(R125i.w)) * intBitsToFloat(1062557013)) + 1.0);
    int param_64 = R125i.w;
    R125i.w = clampFI32(param_64);
    R7i.x = floatBitsToInt((-intBitsToFloat(R5i.w)) + intBitsToFloat(backupReg0i));
    R1i.x = floatBitsToInt(intBitsToFloat(R5i.w) + (-intBitsToFloat(R8i.z)));
    float param_65 = -intBitsToFloat(R126i.x);
    float param_66 = intBitsToFloat(R125i.y);
    R125i.y = floatBitsToInt(mul_nonIEEE(param_65, param_66) + 1.0);
    int param_67 = R125i.y;
    R125i.y = clampFI32(param_67);
    R4i.z = floatBitsToInt(max(intBitsToFloat(R2i.w), -intBitsToFloat(R2i.w)));
    R4i.w = floatBitsToInt(max(intBitsToFloat(R10i.x), intBitsToFloat(R126i.x)));
    tempResultf = 1.0 / sqrt(intBitsToFloat(R124i.x));
    R8i.w = floatBitsToInt(tempResultf);
    R123i.x = floatBitsToInt((intBitsToFloat(R9i.x) * 14.0) + (-7.0));
    R123i.y = floatBitsToInt((intBitsToFloat(R9i.y) * 14.0) + (-7.0));
    PV1iz = 0;
    R1i.w = floatBitsToInt(intBitsToFloat(R8i.x) + intBitsToFloat(R125i.z));
    float param_68 = intBitsToFloat(R6i.z);
    float param_69 = intBitsToFloat(R127i.y);
    R4i.y = floatBitsToInt(mul_nonIEEE(param_68, param_69) + intBitsToFloat(R127i.w));
    tempi.x = floatBitsToInt(dot(vec4(intBitsToFloat(R123i.x), intBitsToFloat(R123i.y), intBitsToFloat(PV1iz), intBitsToFloat(int(0x80000000))), vec4(intBitsToFloat(R123i.x), intBitsToFloat(R123i.y), intBitsToFloat(R123i.y), 0.0)));
    PV0ix = tempi.x;
    PV0iy = tempi.x;
    R1i.z = tempi.x;
    PV0iw = tempi.x;
    float param_70 = intBitsToFloat(R125i.w);
    float param_71 = intBitsToFloat(R125i.y);
    R8i.x = floatBitsToInt(mul_nonIEEE(param_70, param_71));
    R8i.x = floatBitsToInt(intBitsToFloat(R8i.x) * 2.0);
    R127i.x = floatBitsToInt(dot(vec4(-intBitsToFloat(R3i.x), -intBitsToFloat(R3i.y), -intBitsToFloat(R3i.z), -intBitsToFloat(R3i.z)), vec4(intBitsToFloat(R9i.z), intBitsToFloat(R9i.w), intBitsToFloat(R9i.w), intBitsToFloat(R9i.w))));
    PV0iy = R127i.x;
    PV0iz = R127i.x;
    PV0iw = R127i.x;
    float param_72 = -intBitsToFloat(R10i.x);
    float param_73 = intBitsToFloat(R2i.w);
    R124i.w = floatBitsToInt(mul_nonIEEE(param_72, param_73) + 1.0);
    int param_74 = R124i.w;
    R124i.w = clampFI32(param_74);
    R124i.x = (intBitsToFloat(R6i.x) > intBitsToFloat(R4i.w)) ? (-1) : 0;
    R125i.y = (R4i.x == 0) ? 0 : 1065353216;
    R125i.z = floatBitsToInt(((-intBitsToFloat(R7i.x)) * intBitsToFloat(1062557013)) + 1.0);
    int param_75 = R125i.z;
    R125i.z = clampFI32(param_75);
    R125i.w = floatBitsToInt((-intBitsToFloat(R5i.w)) + intBitsToFloat(R8i.z));
    float param_76 = -intBitsToFloat(R8i.w);
    float param_77 = intBitsToFloat(R4i.z);
    R126i.x = floatBitsToInt(mul_nonIEEE(param_76, param_77) + 1.0);
    int param_78 = R126i.x;
    R126i.x = clampFI32(param_78);
    R123i.x = floatBitsToInt(((-intBitsToFloat(R1i.x)) * intBitsToFloat(1062557013)) + 1.0);
    int param_79 = R123i.x;
    R123i.x = clampFI32(param_79);
    PV0iy = floatBitsToInt(max(intBitsToFloat(R10i.x), intBitsToFloat(R8i.w)));
    R126i.z = floatBitsToInt(intBitsToFloat(R5i.w) + (-intBitsToFloat(R8i.y)));
    R127i.w = floatBitsToInt(max(intBitsToFloat(R3i.w), -intBitsToFloat(R3i.w)));
    tempResultf = 1.0 / sqrt(intBitsToFloat(R7i.z));
    R126i.w = floatBitsToInt(tempResultf);
    float param_80 = intBitsToFloat(R123i.x);
    float param_81 = intBitsToFloat(R126i.x);
    R126i.x = floatBitsToInt(mul_nonIEEE(param_80, param_81));
    R126i.x = floatBitsToInt(intBitsToFloat(R126i.x) * 2.0);
    R124i.y = (intBitsToFloat(R6i.x) > intBitsToFloat(PV0iy)) ? (-1) : 0;
    float param_82 = intBitsToFloat(R124i.w);
    float param_83 = intBitsToFloat(R125i.z);
    R125i.z = floatBitsToInt(mul_nonIEEE(param_82, param_83) + intBitsToFloat(R8i.x));
    R8i.w = floatBitsToInt(intBitsToFloat(R4i.y) + intBitsToFloat(R125i.y));
    R127i.y = R1i.w;
    backupReg0i = R126i.z;
    R124i.x = (R124i.x == 0) ? 0 : 1065353216;
    R125i.y = floatBitsToInt(((-intBitsToFloat(R125i.w)) * intBitsToFloat(1062557013)) + 1.0);
    int param_84 = R125i.y;
    R125i.y = clampFI32(param_84);
    R126i.z = floatBitsToInt(intBitsToFloat(R10i.x) * intBitsToFloat(1060320051));
    R125i.w = floatBitsToInt(((-intBitsToFloat(backupReg0i)) * intBitsToFloat(1062557013)) + 1.0);
    int param_85 = R125i.w;
    R125i.w = clampFI32(param_85);
    R3i.w = floatBitsToInt((-intBitsToFloat(R5i.w)) + intBitsToFloat(R8i.y));
    PV1ix = floatBitsToInt(max(intBitsToFloat(R10i.x), intBitsToFloat(R126i.w)));
    R126i.y = floatBitsToInt(max(intBitsToFloat(R10i.y), -intBitsToFloat(R10i.y)));
    float param_86 = -intBitsToFloat(R126i.w);
    float param_87 = intBitsToFloat(R127i.w);
    R123i.z = floatBitsToInt(mul_nonIEEE(param_86, param_87) + 1.0);
    int param_88 = R123i.z;
    R123i.z = clampFI32(param_88);
    R127i.w = floatBitsToInt(intBitsToFloat(R5i.w) + (-intBitsToFloat(R127i.x)));
    tempResultf = 1.0 / sqrt(intBitsToFloat(R1i.z));
    R10i.y = floatBitsToInt(tempResultf);
    backupReg0i = R126i.x;
    float param_89 = intBitsToFloat(R125i.w);
    float param_90 = intBitsToFloat(R123i.z);
    R126i.x = floatBitsToInt(mul_nonIEEE(param_89, param_90));
    R126i.x = floatBitsToInt(intBitsToFloat(R126i.x) * 2.0);
    R8i.y = (intBitsToFloat(R7i.w) > intBitsToFloat(PV1ix)) ? (-1) : 0;
    float param_91 = intBitsToFloat(R124i.w);
    float param_92 = intBitsToFloat(R125i.y);
    R124i.z = floatBitsToInt(mul_nonIEEE(param_91, param_92) + intBitsToFloat(backupReg0i));
    R124i.w = floatBitsToInt(intBitsToFloat(R125i.z) + intBitsToFloat(R124i.x));
    float param_93 = intBitsToFloat(R11i.x);
    float param_94 = intBitsToFloat(R126i.z);
    R125i.y = floatBitsToInt(mul_nonIEEE(param_93, param_94));
    float param_95 = intBitsToFloat(R11i.y);
    float param_96 = intBitsToFloat(R126i.z);
    R124i.x = floatBitsToInt(mul_nonIEEE(param_95, param_96));
    float param_97 = intBitsToFloat(R1i.w);
    float param_98 = intBitsToFloat(R12i.x);
    R11i.y = floatBitsToInt(mul_nonIEEE(param_97, param_98));
    float param_99 = intBitsToFloat(R1i.w);
    float param_100 = intBitsToFloat(R12i.y);
    R127i.z = floatBitsToInt(mul_nonIEEE(param_99, param_100));
    float param_101 = intBitsToFloat(R11i.z);
    float param_102 = intBitsToFloat(R126i.z);
    R125i.w = floatBitsToInt(mul_nonIEEE(param_101, param_102));
    float param_103 = intBitsToFloat(R1i.w);
    float param_104 = intBitsToFloat(R12i.z);
    R125i.z = floatBitsToInt(mul_nonIEEE(param_103, param_104));
    backupReg0i = R127i.w;
    R125i.x = R8i.w;
    R123i.y = floatBitsToInt(((-intBitsToFloat(R3i.w)) * intBitsToFloat(1062557013)) + 1.0);
    int param_105 = R123i.y;
    R123i.y = clampFI32(param_105);
    R126i.z = floatBitsToInt(intBitsToFloat(R126i.z) + intBitsToFloat(R127i.y));
    R127i.w = (R124i.y == 0) ? 0 : 1065353216;
    R11i.z = floatBitsToInt(((-intBitsToFloat(backupReg0i)) * intBitsToFloat(1062557013)) + 1.0);
    int param_106 = R11i.z;
    R11i.z = clampFI32(param_106);
    backupReg0i = R127i.x;
    backupReg1i = R126i.y;
    int backupReg2i = R125i.z;
    float param_107 = intBitsToFloat(R6i.z);
    float param_108 = intBitsToFloat(R123i.y);
    R127i.x = floatBitsToInt(mul_nonIEEE(param_107, param_108) + intBitsToFloat(R126i.x));
    R126i.y = floatBitsToInt((-intBitsToFloat(R5i.w)) + intBitsToFloat(backupReg0i));
    float param_109 = -intBitsToFloat(R10i.y);
    float param_110 = intBitsToFloat(backupReg1i);
    R125i.z = floatBitsToInt(mul_nonIEEE(param_109, param_110) + 1.0);
    int param_111 = R125i.z;
    R125i.z = clampFI32(param_111);
    PV1iw = floatBitsToInt(max(intBitsToFloat(R10i.x), intBitsToFloat(R10i.y)));
    R125i.w = floatBitsToInt(intBitsToFloat(R125i.w) + intBitsToFloat(backupReg2i));
    backupReg0i = R125i.x;
    R125i.x = floatBitsToInt(intBitsToFloat(R124i.x) + intBitsToFloat(R127i.z));
    R125i.y = floatBitsToInt(intBitsToFloat(R125i.y) + intBitsToFloat(R11i.y));
    R6i.z = floatBitsToInt(intBitsToFloat(R124i.z) + intBitsToFloat(R127i.w));
    R127i.w = floatBitsToInt(intBitsToFloat(R126i.z) + intBitsToFloat(backupReg0i));
    R127i.z = (intBitsToFloat(R1i.y) > intBitsToFloat(PV1iw)) ? (-1) : 0;
    float param_112 = intBitsToFloat(R8i.w);
    float param_113 = intBitsToFloat(R13i.z);
    PV1ix = floatBitsToInt(mul_nonIEEE(param_112, param_113));
    float param_114 = intBitsToFloat(R11i.z);
    float param_115 = intBitsToFloat(R125i.z);
    R127i.y = floatBitsToInt(mul_nonIEEE(param_114, param_115));
    R127i.y = floatBitsToInt(intBitsToFloat(R127i.y) * 2.0);
    float param_116 = intBitsToFloat(R8i.w);
    float param_117 = intBitsToFloat(R13i.y);
    PV1iz = floatBitsToInt(mul_nonIEEE(param_116, param_117));
    float param_118 = intBitsToFloat(R8i.w);
    float param_119 = intBitsToFloat(R13i.x);
    PV1iw = floatBitsToInt(mul_nonIEEE(param_118, param_119));
    R125i.z = R124i.w;
    R123i.x = floatBitsToInt(((-intBitsToFloat(R126i.y)) * intBitsToFloat(1062557013)) + 1.0);
    int param_120 = R123i.x;
    R123i.x = clampFI32(param_120);
    R126i.y = floatBitsToInt(intBitsToFloat(R125i.y) + intBitsToFloat(PV1iw));
    R126i.z = floatBitsToInt(intBitsToFloat(R125i.x) + intBitsToFloat(PV1iz));
    R123i.w = (R8i.y == 0) ? 0 : 1065353216;
    R124i.z = floatBitsToInt(intBitsToFloat(R125i.w) + intBitsToFloat(PV1ix));
    float param_121 = intBitsToFloat(R6i.w);
    float param_122 = intBitsToFloat(R123i.x);
    R125i.x = floatBitsToInt(mul_nonIEEE(param_121, param_122) + intBitsToFloat(R127i.y));
    R125i.y = floatBitsToInt(intBitsToFloat(R127i.x) + intBitsToFloat(R123i.w));
    R125i.z = floatBitsToInt(intBitsToFloat(R127i.w) + intBitsToFloat(R125i.z));
    float param_123 = intBitsToFloat(R124i.w);
    float param_124 = intBitsToFloat(R14i.x);
    PV1iw = floatBitsToInt(mul_nonIEEE(param_123, param_124));
    float param_125 = intBitsToFloat(R124i.w);
    float param_126 = intBitsToFloat(R14i.y);
    R127i.x = floatBitsToInt(mul_nonIEEE(param_125, param_126));
    R124i.x = floatBitsToInt(intBitsToFloat(R126i.y) + intBitsToFloat(PV1iw));
    R123i.y = (R127i.z == 0) ? 0 : 1065353216;
    PV0iz = R6i.z;
    float param_127 = intBitsToFloat(R124i.w);
    float param_128 = intBitsToFloat(R14i.z);
    PV0iw = floatBitsToInt(mul_nonIEEE(param_127, param_128));
    float param_129 = intBitsToFloat(R6i.z);
    float param_130 = intBitsToFloat(R15i.x);
    R126i.y = floatBitsToInt(mul_nonIEEE(param_129, param_130));
    PV1ix = floatBitsToInt(intBitsToFloat(R125i.z) + intBitsToFloat(PV0iz));
    R127i.y = floatBitsToInt(intBitsToFloat(R126i.z) + intBitsToFloat(R127i.x));
    R125i.z = floatBitsToInt(intBitsToFloat(R125i.x) + intBitsToFloat(R123i.y));
    R124i.w = floatBitsToInt(intBitsToFloat(R124i.z) + intBitsToFloat(PV0iw));
    PS1i = R125i.y;
    backupReg0i = R126i.y;
    float param_131 = intBitsToFloat(R6i.z);
    float param_132 = intBitsToFloat(R15i.y);
    PV0ix = floatBitsToInt(mul_nonIEEE(param_131, param_132));
    R126i.y = floatBitsToInt(intBitsToFloat(PV1ix) + intBitsToFloat(PS1i));
    R126i.z = floatBitsToInt(intBitsToFloat(R124i.x) + intBitsToFloat(backupReg0i));
    float param_133 = intBitsToFloat(R6i.z);
    float param_134 = intBitsToFloat(R15i.z);
    PV0iw = floatBitsToInt(mul_nonIEEE(param_133, param_134));
    float param_135 = intBitsToFloat(R125i.y);
    float param_136 = intBitsToFloat(R0i.x);
    R127i.w = floatBitsToInt(mul_nonIEEE(param_135, param_136));
    PV1ix = floatBitsToInt(intBitsToFloat(R124i.w) + intBitsToFloat(PV0iw));
    PV1iy = floatBitsToInt(intBitsToFloat(R127i.y) + intBitsToFloat(PV0ix));
    float param_137 = intBitsToFloat(R125i.y);
    float param_138 = intBitsToFloat(R0i.y);
    PV1iz = floatBitsToInt(mul_nonIEEE(param_137, param_138));
    float param_139 = intBitsToFloat(R125i.y);
    float param_140 = intBitsToFloat(R0i.z);
    PV1iw = floatBitsToInt(mul_nonIEEE(param_139, param_140));
    PS1i = R125i.z;
    PV0ix = floatBitsToInt(intBitsToFloat(R126i.z) + intBitsToFloat(R127i.w));
    PV0iy = floatBitsToInt(intBitsToFloat(R126i.y) + intBitsToFloat(PS1i));
    R126i.z = floatBitsToInt(intBitsToFloat(PV1ix) + intBitsToFloat(PV1iw));
    R127i.w = floatBitsToInt(intBitsToFloat(PV1iy) + intBitsToFloat(PV1iz));
    float param_141 = intBitsToFloat(R125i.z);
    float param_142 = intBitsToFloat(R16i.x);
    PS0i = floatBitsToInt(mul_nonIEEE(param_141, param_142));
    PV1ix = floatBitsToInt(intBitsToFloat(PV0ix) + intBitsToFloat(PS0i));
    float param_143 = intBitsToFloat(R125i.z);
    float param_144 = intBitsToFloat(R16i.z);
    PV1iy = floatBitsToInt(mul_nonIEEE(param_143, param_144));
    float param_145 = intBitsToFloat(R125i.z);
    float param_146 = intBitsToFloat(R16i.y);
    PV1iz = floatBitsToInt(mul_nonIEEE(param_145, param_146));
    R124i.x = floatBitsToInt(1.0 / intBitsToFloat(PV0iy));
    R16i.x = floatBitsToInt(intBitsToFloat(PV1ix) * intBitsToFloat(R124i.x));
    PV0iz = floatBitsToInt(intBitsToFloat(R126i.z) + intBitsToFloat(PV1iy));
    PV0iw = floatBitsToInt(intBitsToFloat(R127i.w) + intBitsToFloat(PV1iz));
    R16i.y = floatBitsToInt(intBitsToFloat(PV0iw) * intBitsToFloat(R124i.x));
    R16i.z = floatBitsToInt(intBitsToFloat(PV0iz) * intBitsToFloat(R124i.x));
    tempi.x = floatBitsToInt(dot(vec4(intBitsToFloat(R16i.x), intBitsToFloat(R16i.y), intBitsToFloat(R16i.z), intBitsToFloat(int(0x80000000))), vec4(intBitsToFloat(1050220167), intBitsToFloat(1058424226), intBitsToFloat(1038710997), 0.0)));
    PV0ix = tempi.x;
    PV0iy = tempi.x;
    PV0iz = tempi.x;
    R16i.w = tempi.x;
    passPixelColor0 = vec4(intBitsToFloat(R16i.x), intBitsToFloat(R16i.y), intBitsToFloat(R16i.z), intBitsToFloat(0.0));
}

