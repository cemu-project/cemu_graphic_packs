#version 460

layout(set = 1, binding = 1, std140) uniform ufBlock
{
    ivec4 uf_remappedPS[1];
    vec4 uf_fragCoordScale;
} _158;

layout(set = 1, binding = 0) uniform sampler2D textureUnitPS0;

layout(location = 0) in vec4 passParameterSem144;
layout(location = 1) in vec4 passParameterSem133;
layout(location = 0) out vec4 passPixelColor0;

float mul_nonIEEE(float a, float b)
{
    return ((a != 0.0) && (b != 0.0)) ? (a * b) : 0.0;
}

void main()
{
    ivec4 R0i = ivec4(0);
    ivec4 R1i = ivec4(0);
    int PV0ix = 0;
    int PV0iy = 0;
    int PV0iz = 0;
    int PV0iw = 0;
    int PV1ix = 0;
    int PV1iy = 0;
    int PV1iz = 0;
    int PV1iw = 0;
    int PS0i = 0;
    int PS1i = 0;
    ivec4 tempi = ivec4(0);
    ivec4 ARi = ivec4(0);
    bool predResult = true;
    bool activeMaskStack[2];
    activeMaskStack[0] = false;
    bool activeMaskStackC[3];
    activeMaskStackC[0] = false;
    activeMaskStackC[1] = false;
    activeMaskStack[0] = true;
    activeMaskStackC[0] = true;
    activeMaskStackC[1] = true;
    R0i = floatBitsToInt(passParameterSem144);
    R1i = floatBitsToInt(passParameterSem133);
    if (activeMaskStackC[1] == true)
    {
    }
    if (activeMaskStackC[1] == true)
    {
        activeMaskStack[1] = activeMaskStack[0];
        activeMaskStackC[2] = activeMaskStackC[1];
        float param = intBitsToFloat(R0i.x);
        float param_1 = intBitsToFloat(R1i.x);
        R0i.x = floatBitsToInt(mul_nonIEEE(param, param_1));
        float param_2 = intBitsToFloat(R0i.y);
        float param_3 = intBitsToFloat(R1i.y);
        R0i.y = floatBitsToInt(mul_nonIEEE(param_2, param_3));
        float param_4 = intBitsToFloat(R0i.z);
        float param_5 = intBitsToFloat(R1i.z);
        R0i.z = floatBitsToInt(mul_nonIEEE(param_4, param_5));
        float param_6 = intBitsToFloat(R0i.w);
        float param_7 = intBitsToFloat(R1i.w);
        R0i.w = floatBitsToInt(mul_nonIEEE(param_6, param_7));
        R1i.x = floatBitsToInt(intBitsToFloat(R0i.w) + (-intBitsToFloat(_158.uf_remappedPS[0].x)));
        predResult = 0.0 > intBitsToFloat(R1i.x);
        activeMaskStack[1] = predResult;
        bool _174 = predResult == true;
        bool _180;
        if (_174)
        {
            _180 = activeMaskStackC[1] == true;
        }
        else
        {
            _180 = _174;
        }
        activeMaskStackC[2] = _180;
    }
    else
    {
        activeMaskStack[1] = false;
        activeMaskStackC[2] = false;
    }
    if (activeMaskStackC[2] == true)
    {
        if (true)
        {
            discard;
        }
    }
    bool _195 = activeMaskStack[0] == true;
    bool _201;
    if (_195)
    {
        _201 = activeMaskStackC[0] == true;
    }
    else
    {
        _201 = _195;
    }
    activeMaskStackC[1] = _201;
    passPixelColor0 = vec4(intBitsToFloat(R0i.x), intBitsToFloat(R0i.y), intBitsToFloat(R0i.z), intBitsToFloat(R0i.w));
}

