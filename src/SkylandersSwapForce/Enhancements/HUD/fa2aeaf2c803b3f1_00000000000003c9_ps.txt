#version 460

layout(set = 1, binding = 2, std140) uniform ufBlock
{
    vec4 uf_fragCoordScale;
} _233;

layout(set = 1, binding = 0) uniform sampler2D textureUnitPS0;
layout(set = 1, binding = 1) uniform sampler2D textureUnitPS1;

layout(location = 0) in vec4 passParameterSem144;
layout(location = 1) in vec4 passParameterSem133;
layout(location = 2) in vec4 passParameterSem134;
layout(location = 0) out vec4 passPixelColor0;

float mul_nonIEEE(float a, float b)
{
    return ((a != 0.0) && (b != 0.0)) ? (a * b) : 0.0;
}

void main()
{
    vec4 R0f = vec4(0.0);
    vec4 R1f = vec4(0.0);
    vec4 R2f = vec4(0.0);
    vec4 R123f = vec4(0.0);
    vec4 R126f = vec4(0.0);
    vec4 R127f = vec4(0.0);
    float PV0fx = 0.0;
    float PV0fy = 0.0;
    float PV0fz = 0.0;
    float PV0fw = 0.0;
    float PV1fx = 0.0;
    float PV1fy = 0.0;
    float PV1fz = 0.0;
    float PV1fw = 0.0;
    float PS0f = 0.0;
    float PS1f = 0.0;
    vec4 tempf = vec4(0.0);
    ivec4 ARi = ivec4(0);
    bool predResult = true;
    R0f = passParameterSem144;
    R1f = passParameterSem133;
    R2f = passParameterSem134;
    R1f.w = texture(textureUnitPS0, vec2(R1f.x, R1f.y)).w;
    R2f = texture(textureUnitPS1, vec2(R2f.x, R2f.y));
    PV0fx = fract(-R1f.w);
    R127f.y = (-R2f.w) + 1.0;
    PV0fz = R1f.w;
    R127f.w = (-R2f.x) + 1.0;
    R126f.w = (-R2f.y) + 1.0;
    R127f.x = (-R2f.z) + 1.0;
    float param = R0f.w;
    float param_1 = PV0fz;
    PV1fz = mul_nonIEEE(param, param_1);
    PV1fw = R1f.w + PV0fx;
    float param_2 = R0f.y;
    float param_3 = PV1fw;
    PV0fx = mul_nonIEEE(param_2, param_3);
    float param_4 = R0f.x;
    float param_5 = PV1fw;
    PV0fy = mul_nonIEEE(param_4, param_5);
    R127f.z = (-PV1fz) + 1.0;
    float param_6 = R0f.z;
    float param_7 = PV1fw;
    PV0fw = mul_nonIEEE(param_6, param_7);
    float param_8 = PV1fz;
    float param_9 = R127f.y;
    PS0f = mul_nonIEEE(param_8, param_9);
    float param_10 = PV0fy;
    float param_11 = R127f.w;
    PV1fx = mul_nonIEEE(param_10, param_11);
    float param_12 = R2f.w;
    float param_13 = R127f.z;
    R123f.y = mul_nonIEEE(param_12, param_13) + PS0f;
    float param_14 = PV0fw;
    float param_15 = R127f.x;
    PV1fz = mul_nonIEEE(param_14, param_15);
    float param_16 = PV0fx;
    float param_17 = R126f.w;
    PV1fw = mul_nonIEEE(param_16, param_17);
    float param_18 = R2f.x;
    float param_19 = R127f.z;
    R0f.x = mul_nonIEEE(param_18, param_19) + PV1fx;
    float param_20 = R2f.y;
    float param_21 = R127f.z;
    R0f.y = mul_nonIEEE(param_20, param_21) + PV1fw;
    float param_22 = R2f.z;
    float param_23 = R127f.z;
    R0f.z = mul_nonIEEE(param_22, param_23) + PV1fz;
    float param_24 = R0f.w;
    float param_25 = R123f.y;
    R0f.w = mul_nonIEEE(param_24, param_25);
    passPixelColor0 = vec4(R0f.x, R0f.y, R0f.z, 0.0);
}

