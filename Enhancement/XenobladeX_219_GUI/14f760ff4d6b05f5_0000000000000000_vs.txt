#version 420
#extension GL_ARB_texture_gather : enable
#extension GL_ARB_separate_shader_objects : enable
#extension GL_ARB_shading_language_packing : enable
// shader 14f760ff4d6b05f5
//muzzle flash
uniform ivec4 uf_remappedVS[24];
uniform vec2 uf_windowSpaceToClipSpaceTransform;
layout(location = 0) in uvec4 attrDataSem0;
layout(location = 1) in uvec4 attrDataSem1;
layout(location = 2) in uvec4 attrDataSem2;
layout(location = 3) in uvec4 attrDataSem3;
layout(location = 4) in uvec4 attrDataSem4;
layout(location = 5) in uvec4 attrDataSem6;
layout(location = 6) in uvec4 attrDataSem7;
layout(location = 7) in uvec4 attrDataSem8;
out gl_PerVertex
{
	vec4 gl_Position;
	float gl_PointSize;
};
layout(location = 3) out vec4 passParameterSem3;
layout(location = 4) out vec4 passParameterSem4;
layout(location = 0) out vec4 passParameterSem0;
layout(location = 2) out vec4 passParameterSem2;
layout(location = 1) out vec4 passParameterSem1;
int clampFI32(int v)
{
if( v == 0x7FFFFFFF )
	return floatBitsToInt(1.0);
else if( v == 0xFFFFFFFF )
	return floatBitsToInt(0.0);
return floatBitsToInt(clamp(intBitsToFloat(v), 0.0, 1.0));
}
float mul_nonIEEE(float a, float b){ if( a == 0.0 || b == 0.0 ) return 0.0; return a*b; }
void main()
{
ivec4 R0i = ivec4(0);
ivec4 R1i = ivec4(0);
ivec4 R2i = ivec4(0);
ivec4 R3i = ivec4(0);
ivec4 R4i = ivec4(0);
ivec4 R5i = ivec4(0);
ivec4 R6i = ivec4(0);
ivec4 R7i = ivec4(0);
ivec4 R8i = ivec4(0);
ivec4 R9i = ivec4(0);
ivec4 R10i = ivec4(0);
ivec4 R122i = ivec4(0);
ivec4 R123i = ivec4(0);
ivec4 R124i = ivec4(0);
ivec4 R125i = ivec4(0);
ivec4 R126i = ivec4(0);
ivec4 R127i = ivec4(0);
uvec4 attrDecoder;
int backupReg0i, backupReg1i, backupReg2i, backupReg3i, backupReg4i;
ivec4 PV0i = ivec4(0), PV1i = ivec4(0);
int PS0i = 0, PS1i = 0;
ivec4 tempi = ivec4(0);
float tempResultf;
int tempResulti;
ivec4 ARi = ivec4(0);
bool predResult = true;
vec3 cubeMapSTM;
int cubeMapFaceId;
R0i = ivec4(gl_VertexID, 0, 0, gl_InstanceID);
attrDecoder.xy = attrDataSem0.xy;
attrDecoder.xy = (attrDecoder.xy>>24)|((attrDecoder.xy>>8)&0xFF00)|((attrDecoder.xy<<8)&0xFF0000)|((attrDecoder.xy<<24));
attrDecoder.z = 0;
attrDecoder.w = 0;
R1i = ivec4(int(attrDecoder.x), int(attrDecoder.y), floatBitsToInt(0.0), floatBitsToInt(1.0));
attrDecoder = attrDataSem1;
attrDecoder = (attrDecoder>>24)|((attrDecoder>>8)&0xFF00)|((attrDecoder<<8)&0xFF0000)|((attrDecoder<<24));
R2i = ivec4(int(attrDecoder.x), int(attrDecoder.y), int(attrDecoder.z), int(attrDecoder.w));
attrDecoder = attrDataSem6;
attrDecoder = (attrDecoder>>24)|((attrDecoder>>8)&0xFF00)|((attrDecoder<<8)&0xFF0000)|((attrDecoder<<24));
R6i = ivec4(int(attrDecoder.x), int(attrDecoder.y), int(attrDecoder.z), int(attrDecoder.w));
attrDecoder.xyz = attrDataSem7.xyz;
attrDecoder.xyz = (attrDecoder.xyz>>24)|((attrDecoder.xyz>>8)&0xFF00)|((attrDecoder.xyz<<8)&0xFF0000)|((attrDecoder.xyz<<24));
attrDecoder.w = 0;
R7i = ivec4(int(attrDecoder.x), int(attrDecoder.y), int(attrDecoder.z), floatBitsToInt(1.0));
attrDecoder.xyz = attrDataSem4.xyz;
attrDecoder.xyz = (attrDecoder.xyz>>24)|((attrDecoder.xyz>>8)&0xFF00)|((attrDecoder.xyz<<8)&0xFF0000)|((attrDecoder.xyz<<24));
attrDecoder.w = 0;
R5i = ivec4(int(attrDecoder.x), int(attrDecoder.y), int(attrDecoder.z), floatBitsToInt(1.0));
attrDecoder = attrDataSem8;
attrDecoder = (attrDecoder>>24)|((attrDecoder>>8)&0xFF00)|((attrDecoder<<8)&0xFF0000)|((attrDecoder<<24));
R8i = ivec4(int(attrDecoder.x), int(attrDecoder.y), int(attrDecoder.z), int(attrDecoder.w));
attrDecoder.xyzw = floatBitsToUint(vec4(attrDataSem2.xyzw)/255.0);
R3i = ivec4(int(attrDecoder.x), int(attrDecoder.y), int(attrDecoder.z), int(attrDecoder.w));
attrDecoder.xyzw = floatBitsToUint(vec4(attrDataSem3.xyzw)/255.0);
R4i = ivec4(int(attrDecoder.x), int(attrDecoder.y), int(attrDecoder.z), int(attrDecoder.w));
// 0
PV0i.x = floatBitsToInt(intBitsToFloat(R2i.w) + -(0.5));
R123i.y = floatBitsToInt((intBitsToFloat(R6i.z) * intBitsToFloat(0x3e22f983) + 0.5));
PV0i.y = R123i.y;
PV0i.z = floatBitsToInt(mul_nonIEEE(intBitsToFloat(R5i.x), intBitsToFloat(R7i.x)));
PV0i.w = floatBitsToInt(mul_nonIEEE(intBitsToFloat(R5i.y), intBitsToFloat(R7i.y)));
PS0i = floatBitsToInt(mul_nonIEEE(intBitsToFloat(R5i.z), intBitsToFloat(R7i.z)));
// 1
PV1i.x = floatBitsToInt(fract(intBitsToFloat(PV0i.y)));
R123i.y = ((intBitsToFloat(PV0i.x) >= 0.0)?(floatBitsToInt(1.0)):(0));
PV1i.y = R123i.y;
PV1i.z = floatBitsToInt(-(intBitsToFloat(R5i.x)) + intBitsToFloat(PV0i.z));
PV1i.w = floatBitsToInt(-(intBitsToFloat(R5i.y)) + intBitsToFloat(PV0i.w));
PS1i = floatBitsToInt(-(intBitsToFloat(R5i.z)) + intBitsToFloat(PS0i));
// 2
R127i.x = floatBitsToInt((mul_nonIEEE(intBitsToFloat(PV1i.w),intBitsToFloat(PV1i.y)) + intBitsToFloat(R5i.y)));
R123i.y = floatBitsToInt((mul_nonIEEE(intBitsToFloat(PS1i),intBitsToFloat(PV1i.y)) + intBitsToFloat(R5i.z)));
PV0i.y = R123i.y;
R127i.z = floatBitsToInt((mul_nonIEEE(intBitsToFloat(PV1i.z),intBitsToFloat(PV1i.y)) + intBitsToFloat(R5i.x)));
R123i.w = floatBitsToInt((intBitsToFloat(PV1i.x) * intBitsToFloat(0x40c90fdb) + -(intBitsToFloat(0x40490fdb))));
PV0i.w = R123i.w;
PS0i = 0;
// 3
PV1i.x = floatBitsToInt(mul_nonIEEE(intBitsToFloat(R1i.x), intBitsToFloat(R7i.x)));
PV1i.y = floatBitsToInt(mul_nonIEEE(intBitsToFloat(R1i.y), intBitsToFloat(R7i.y)));
R126i.z = floatBitsToInt(intBitsToFloat(PV0i.w) * intBitsToFloat(0x3e22f983));
PV1i.z = R126i.z;
R126i.w = floatBitsToInt(intBitsToFloat(PS0i) + intBitsToFloat(PV0i.y));
R5i.z = 0;
PS1i = R5i.z;
// 4
backupReg0i = R127i.x;
R127i.x = floatBitsToInt(intBitsToFloat(PV1i.x) + intBitsToFloat(R127i.z));
R127i.y = floatBitsToInt(intBitsToFloat(PV1i.y) + intBitsToFloat(backupReg0i));
R127i.z = floatBitsToInt(intBitsToFloat(uf_remappedVS[0].x) * 1.0);
R127i.w = floatBitsToInt(intBitsToFloat(uf_remappedVS[0].y) * 1.0);
PS0i = floatBitsToInt(sin((intBitsToFloat(PV1i.z))/0.1591549367));
// 5
backupReg0i = R126i.z;
R7i.x = PS0i;
R125i.y = floatBitsToInt(-(intBitsToFloat(PS0i)));
R126i.z = floatBitsToInt(intBitsToFloat(uf_remappedVS[0].z) * 1.0);
R125i.w = R126i.w;
PS1i = floatBitsToInt(cos((intBitsToFloat(backupReg0i))/0.1591549367));
// 6
backupReg0i = R127i.z;
backupReg1i = R127i.w;
R125i.x = PS1i;
PV0i.x = R125i.x;
R7i.y = PS1i;
R127i.z = floatBitsToInt(intBitsToFloat(uf_remappedVS[0].w) * 1.0);
R127i.w = floatBitsToInt((mul_nonIEEE(intBitsToFloat(R2i.z),intBitsToFloat(uf_remappedVS[1].x)) + intBitsToFloat(backupReg0i)));
R124i.w = floatBitsToInt((mul_nonIEEE(intBitsToFloat(R2i.z),intBitsToFloat(uf_remappedVS[1].y)) + intBitsToFloat(backupReg1i)));
PS0i = R124i.w;
// 7
R126i.x = floatBitsToInt(dot(vec4(intBitsToFloat(PV0i.x),intBitsToFloat(R125i.y),intBitsToFloat(R5i.z),-0.0),vec4(intBitsToFloat(R127i.x),intBitsToFloat(R127i.y),intBitsToFloat(R126i.w),0.0)));
PV1i.x = R126i.x;
PV1i.y = R126i.x;
PV1i.z = R126i.x;
PV1i.w = R126i.x;
R126i.y = floatBitsToInt((mul_nonIEEE(intBitsToFloat(R2i.z),intBitsToFloat(uf_remappedVS[1].z)) + intBitsToFloat(R126i.z)));
PS1i = R126i.y;
// 8
backupReg0i = R127i.y;
tempi.x = floatBitsToInt(dot(vec4(intBitsToFloat(R7i.x),intBitsToFloat(R7i.y),intBitsToFloat(R5i.z),-0.0),vec4(intBitsToFloat(R127i.x),intBitsToFloat(backupReg0i),intBitsToFloat(R126i.w),0.0)));
PV0i.x = tempi.x;
PV0i.y = tempi.x;
PV0i.z = tempi.x;
PV0i.w = tempi.x;
R127i.y = tempi.x;
R127i.x = floatBitsToInt((mul_nonIEEE(intBitsToFloat(R2i.z),intBitsToFloat(uf_remappedVS[1].w)) + intBitsToFloat(R127i.z)));
PS0i = R127i.x;
// 9
tempi.x = floatBitsToInt(dot(vec4(intBitsToFloat(R126i.x),intBitsToFloat(PV0i.x),intBitsToFloat(R125i.w),-0.0),vec4(intBitsToFloat(uf_remappedVS[2].x),intBitsToFloat(uf_remappedVS[2].y),intBitsToFloat(uf_remappedVS[2].z),0.0)));
PV1i.x = tempi.x;
PV1i.y = tempi.x;
PV1i.z = tempi.x;
PV1i.w = tempi.x;
R0i.y = R3i.w;
R0i.y = floatBitsToInt(intBitsToFloat(R0i.y) * 2.0);
PS1i = R0i.y;
// 10
tempi.x = floatBitsToInt(dot(vec4(intBitsToFloat(R126i.x),intBitsToFloat(R127i.y),intBitsToFloat(R125i.w),-0.0),vec4(intBitsToFloat(uf_remappedVS[3].x),intBitsToFloat(uf_remappedVS[3].y),intBitsToFloat(uf_remappedVS[3].z),0.0)));
PV0i.x = tempi.x;
PV0i.y = tempi.x;
PV0i.z = tempi.x;
PV0i.w = tempi.x;
R126i.w = floatBitsToInt(intBitsToFloat(PV1i.x) * 1.0);
PS0i = R126i.w;
// 11
tempi.x = floatBitsToInt(dot(vec4(intBitsToFloat(R126i.x),intBitsToFloat(R127i.y),intBitsToFloat(R125i.w),-0.0),vec4(intBitsToFloat(uf_remappedVS[4].x),intBitsToFloat(uf_remappedVS[4].y),intBitsToFloat(uf_remappedVS[4].z),0.0)));
PV1i.x = tempi.x;
PV1i.y = tempi.x;
PV1i.z = tempi.x;
PV1i.w = tempi.x;
R127i.z = floatBitsToInt(intBitsToFloat(PV0i.x) * 1.0);
PS1i = R127i.z;
// 12
R123i.x = floatBitsToInt((mul_nonIEEE(intBitsToFloat(R2i.y),intBitsToFloat(uf_remappedVS[5].w)) + intBitsToFloat(R127i.x)));
PV0i.x = R123i.x;
R123i.y = floatBitsToInt((mul_nonIEEE(intBitsToFloat(R2i.y),intBitsToFloat(uf_remappedVS[5].z)) + intBitsToFloat(R126i.y)));
PV0i.y = R123i.y;
R123i.z = floatBitsToInt((mul_nonIEEE(intBitsToFloat(R2i.y),intBitsToFloat(uf_remappedVS[5].x)) + intBitsToFloat(R127i.w)));
PV0i.z = R123i.z;
R123i.w = floatBitsToInt((mul_nonIEEE(intBitsToFloat(R2i.y),intBitsToFloat(uf_remappedVS[5].y)) + intBitsToFloat(R124i.w)));
PV0i.w = R123i.w;
R127i.w = floatBitsToInt(intBitsToFloat(PV1i.x) * 1.0);
PS0i = R127i.w;
// 13
R123i.x = floatBitsToInt((mul_nonIEEE(intBitsToFloat(R2i.x),intBitsToFloat(uf_remappedVS[6].z)) + intBitsToFloat(PV0i.y)));
PV1i.x = R123i.x;
R123i.y = floatBitsToInt((mul_nonIEEE(intBitsToFloat(R2i.x),intBitsToFloat(uf_remappedVS[6].y)) + intBitsToFloat(PV0i.w)));
PV1i.y = R123i.y;
R123i.z = floatBitsToInt((mul_nonIEEE(intBitsToFloat(R2i.x),intBitsToFloat(uf_remappedVS[6].x)) + intBitsToFloat(PV0i.z)));
PV1i.z = R123i.z;
R0i.w = floatBitsToInt((mul_nonIEEE(intBitsToFloat(R2i.x),intBitsToFloat(uf_remappedVS[6].w)) + intBitsToFloat(PV0i.x)));
R126i.z = ((0.0 >= intBitsToFloat(R0i.y))?int(0xFFFFFFFF):int(0x0));
PS1i = R126i.z;
// 14
R0i.x = floatBitsToInt(intBitsToFloat(PV1i.z) + intBitsToFloat(R126i.w));
PV0i.x = R0i.x;
R5i.y = floatBitsToInt(intBitsToFloat(PV1i.y) + intBitsToFloat(R127i.z));
PV0i.y = R5i.y;
R0i.z = floatBitsToInt(intBitsToFloat(PV1i.x) + intBitsToFloat(R127i.w));
PV0i.z = R0i.z;
R127i.w = ((0.0 >= intBitsToFloat(uf_remappedVS[7].w))?int(0xFFFFFFFF):int(0x0));
R7i.z = 0;
PS0i = R7i.z;
// 15
backupReg0i = R0i.w;
tempi.x = floatBitsToInt(dot(vec4(intBitsToFloat(PV0i.x),intBitsToFloat(PV0i.y),intBitsToFloat(PV0i.z),intBitsToFloat(backupReg0i)),vec4(intBitsToFloat(uf_remappedVS[8].x),intBitsToFloat(uf_remappedVS[8].y),intBitsToFloat(uf_remappedVS[8].z),intBitsToFloat(uf_remappedVS[8].w))));
PV1i.x = tempi.x;
PV1i.y = tempi.x;
PV1i.z = tempi.x;
PV1i.w = tempi.x;
R6i.z = 0;
PS1i = R6i.z;
// 16
backupReg0i = R0i.x;
backupReg1i = R0i.z;
backupReg2i = R0i.w;
tempi.x = floatBitsToInt(dot(vec4(intBitsToFloat(backupReg0i),intBitsToFloat(R5i.y),intBitsToFloat(backupReg1i),intBitsToFloat(backupReg2i)),vec4(intBitsToFloat(uf_remappedVS[9].x),intBitsToFloat(uf_remappedVS[9].y),intBitsToFloat(uf_remappedVS[9].z),intBitsToFloat(uf_remappedVS[9].w))));
PV0i.x = tempi.x;
PV0i.y = tempi.x;
PV0i.z = tempi.x;
PV0i.w = tempi.x;
R10i.x = floatBitsToInt(intBitsToFloat(PV1i.x) + 0.0);
PS0i = R10i.x;
// 17
backupReg0i = R0i.x;
backupReg1i = R0i.w;
tempi.x = floatBitsToInt(dot(vec4(intBitsToFloat(backupReg0i),intBitsToFloat(R5i.y),intBitsToFloat(R0i.z),intBitsToFloat(backupReg1i)),vec4(intBitsToFloat(uf_remappedVS[10].x),intBitsToFloat(uf_remappedVS[10].y),intBitsToFloat(uf_remappedVS[10].z),intBitsToFloat(uf_remappedVS[10].w))));
PV1i.x = tempi.x;
PV1i.y = tempi.x;
PV1i.z = tempi.x;
PV1i.w = tempi.x;
R127i.z = tempi.x;
R10i.y = floatBitsToInt(intBitsToFloat(PV0i.x) + 0.0);
PS1i = R10i.y;
// 18
backupReg0i = R0i.x;
backupReg1i = R0i.z;
tempi.x = floatBitsToInt(dot(vec4(intBitsToFloat(backupReg0i),intBitsToFloat(R5i.y),intBitsToFloat(backupReg1i),intBitsToFloat(R0i.w)),vec4(intBitsToFloat(uf_remappedVS[11].x),intBitsToFloat(uf_remappedVS[11].y),intBitsToFloat(uf_remappedVS[11].z),intBitsToFloat(uf_remappedVS[11].w))));
PV0i.x = tempi.x;
PV0i.y = tempi.x;
PV0i.z = tempi.x;
PV0i.w = tempi.x;
R10i.w = tempi.x;
R122i.x = ((R126i.z == 0)?(R10i.x):(0x3f800000));
PS0i = R122i.x;
// 19
R123i.x = ((R126i.z == 0)?(R10i.y):(0x3f800000));
PV1i.x = R123i.x;
R123i.y = ((R126i.z == 0)?(PV0i.x):(0x3f800000));
PV1i.y = R123i.y;
R123i.z = ((R126i.z == 0)?(R127i.z):(0x3f800000));
PV1i.z = R123i.z;
R1i.w = uf_remappedVS[2].z;
R2i.x = ((R127i.w == 0)?(PS0i):(0x3f800000));
PS1i = R2i.x;
// 20
R9i.x = uf_remappedVS[3].z;
R2i.y = ((R127i.w == 0)?(PV1i.x):(0x3f800000));
R2i.z = ((R127i.w == 0)?(PV1i.z):(0x3f800000));
R2i.w = ((R127i.w == 0)?(PV1i.y):(0x3f800000));
R1i.z = uf_remappedVS[4].z;
PS0i = R1i.z;
// 21
R5i.x = floatBitsToInt(dot(vec4(intBitsToFloat(R1i.x),intBitsToFloat(R1i.y),intBitsToFloat(R7i.z),-0.0),vec4(intBitsToFloat(R125i.x),intBitsToFloat(R125i.y),intBitsToFloat(R5i.z),0.0)));
PV1i.x = R5i.x;
PV1i.y = R5i.x;
PV1i.z = R5i.x;
PV1i.w = R5i.x;
R6i.x = floatBitsToInt(intBitsToFloat(uf_remappedVS[12].x) + -(1.0));
PS1i = R6i.x;
// export
float origRatio = 1.777f;
float newRatio = 2.370f;
// *(origRatio / newRatio)
gl_Position = vec4(intBitsToFloat(R2i.x)*(origRatio / newRatio), intBitsToFloat(R2i.y), intBitsToFloat(R2i.z), intBitsToFloat(R2i.w));
// 0
tempi.x = floatBitsToInt(dot(vec4(intBitsToFloat(R1i.x),intBitsToFloat(R1i.y),intBitsToFloat(R7i.z),-0.0),vec4(intBitsToFloat(R7i.x),intBitsToFloat(R7i.y),intBitsToFloat(R5i.z),0.0)));
PV0i.x = tempi.x;
PV0i.y = tempi.x;
PV0i.z = tempi.x;
PV0i.w = tempi.x;
R125i.y = tempi.x;
R124i.w = floatBitsToInt(intBitsToFloat(uf_remappedVS[12].y) + -(1.0));
PS0i = R124i.w;
// 1
R125i.x = floatBitsToInt(dot(vec4(intBitsToFloat(R5i.x),intBitsToFloat(PV0i.x),intBitsToFloat(R6i.z),-0.0),vec4(intBitsToFloat(uf_remappedVS[2].x),intBitsToFloat(uf_remappedVS[2].y),intBitsToFloat(uf_remappedVS[2].z),0.0)));
PV1i.x = R125i.x;
PV1i.y = R125i.x;
PV1i.z = R125i.x;
PV1i.w = R125i.x;
R127i.z = floatBitsToInt((mul_nonIEEE(intBitsToFloat(R1i.y),intBitsToFloat(R8i.w)) + intBitsToFloat(R8i.y)));
PS1i = R127i.z;
// 2
tempi.x = floatBitsToInt(dot(vec4(intBitsToFloat(R5i.x),intBitsToFloat(R125i.y),intBitsToFloat(R6i.z),-0.0),vec4(intBitsToFloat(uf_remappedVS[3].x),intBitsToFloat(uf_remappedVS[3].y),intBitsToFloat(uf_remappedVS[3].z),0.0)));
PV0i.x = tempi.x;
PV0i.y = tempi.x;
PV0i.z = tempi.x;
PV0i.w = tempi.x;
R126i.y = tempi.x;
R127i.w = floatBitsToInt((mul_nonIEEE(intBitsToFloat(R1i.x),intBitsToFloat(R8i.z)) + intBitsToFloat(R8i.x)));
PS0i = R127i.w;
// 3
backupReg0i = R127i.z;
tempi.x = floatBitsToInt(dot(vec4(intBitsToFloat(R5i.x),intBitsToFloat(R125i.y),intBitsToFloat(R6i.z),-0.0),vec4(intBitsToFloat(uf_remappedVS[4].x),intBitsToFloat(uf_remappedVS[4].y),intBitsToFloat(uf_remappedVS[4].z),0.0)));
PV1i.x = tempi.x;
PV1i.y = tempi.x;
PV1i.z = tempi.x;
PV1i.w = tempi.x;
R127i.z = tempi.x;
R126i.w = floatBitsToInt(intBitsToFloat(backupReg0i) + 0.5);
PS1i = R126i.w;
// 4
backupReg0i = R0i.z;
backupReg1i = R0i.w;
R126i.x = floatBitsToInt(dot(vec4(intBitsToFloat(R0i.x),intBitsToFloat(R5i.y),intBitsToFloat(backupReg0i),intBitsToFloat(backupReg1i)),vec4(intBitsToFloat(uf_remappedVS[13].x),intBitsToFloat(uf_remappedVS[13].y),intBitsToFloat(uf_remappedVS[13].z),intBitsToFloat(uf_remappedVS[13].w))));
PV0i.x = R126i.x;
PV0i.y = R126i.x;
PV0i.z = R126i.x;
PV0i.w = R126i.x;
R1i.x = floatBitsToInt(intBitsToFloat(R127i.w) + 0.5);
PS0i = R1i.x;
// 5
backupReg0i = R0i.x;
backupReg1i = R0i.z;
backupReg2i = R0i.w;
tempi.x = floatBitsToInt(dot(vec4(intBitsToFloat(backupReg0i),intBitsToFloat(R5i.y),intBitsToFloat(backupReg1i),intBitsToFloat(backupReg2i)),vec4(intBitsToFloat(uf_remappedVS[14].x),intBitsToFloat(uf_remappedVS[14].y),intBitsToFloat(uf_remappedVS[14].z),intBitsToFloat(uf_remappedVS[14].w))));
PV1i.x = tempi.x;
PV1i.y = tempi.x;
PV1i.z = tempi.x;
PV1i.w = tempi.x;
R125i.y = tempi.x;
R1i.y = floatBitsToInt(-(intBitsToFloat(R126i.w)) + 1.0);
PS1i = R1i.y;
// 6
backupReg0i = R0i.x;
backupReg1i = R0i.w;
tempi.x = floatBitsToInt(dot(vec4(intBitsToFloat(backupReg0i),intBitsToFloat(R5i.y),intBitsToFloat(R0i.z),intBitsToFloat(backupReg1i)),vec4(intBitsToFloat(uf_remappedVS[15].x),intBitsToFloat(uf_remappedVS[15].y),intBitsToFloat(uf_remappedVS[15].z),intBitsToFloat(uf_remappedVS[15].w))));
PV0i.x = tempi.x;
PV0i.y = tempi.x;
PV0i.z = tempi.x;
PV0i.w = tempi.x;
R126i.z = tempi.x;
PS0i = floatBitsToInt(intBitsToFloat(R127i.z) * intBitsToFloat(R127i.z));
// 7
tempi.x = floatBitsToInt(dot(vec4(intBitsToFloat(R125i.x),intBitsToFloat(R126i.y),intBitsToFloat(PS0i),-0.0),vec4(intBitsToFloat(R125i.x),intBitsToFloat(R126i.y),1.0,0.0)));
PV1i.x = tempi.x;
PV1i.y = tempi.x;
PV1i.z = tempi.x;
PV1i.w = tempi.x;
R127i.x = floatBitsToInt(-(intBitsToFloat(PV0i.x)) + -(intBitsToFloat(uf_remappedVS[16].x)));
PS1i = R127i.x;
// 8
tempi.x = floatBitsToInt(dot(vec4(intBitsToFloat(R126i.x),intBitsToFloat(R125i.y),intBitsToFloat(R126i.z),-0.0),vec4(intBitsToFloat(R126i.x),intBitsToFloat(R125i.y),intBitsToFloat(R126i.z),0.0)));
PV0i.x = tempi.x;
PV0i.y = tempi.x;
PV0i.z = tempi.x;
PV0i.w = tempi.x;
tempResultf = 1.0 / sqrt(intBitsToFloat(PV1i.x));
PS0i = floatBitsToInt(tempResultf);
// 9
backupReg0i = R126i.y;
backupReg1i = R127i.z;
backupReg2i = R127i.x;
R127i.x = floatBitsToInt(mul_nonIEEE(intBitsToFloat(R125i.x), intBitsToFloat(PS0i)));
R126i.y = floatBitsToInt(mul_nonIEEE(intBitsToFloat(backupReg0i), intBitsToFloat(PS0i)));
R127i.z = floatBitsToInt(mul_nonIEEE(intBitsToFloat(backupReg1i), intBitsToFloat(PS0i)));
PV1i.w = floatBitsToInt(mul_nonIEEE(intBitsToFloat(backupReg2i), intBitsToFloat(uf_remappedVS[16].y)));
tempResultf = 1.0 / sqrt(intBitsToFloat(PV0i.x));
PS1i = floatBitsToInt(tempResultf);
// 10
R125i.x = floatBitsToInt(mul_nonIEEE(intBitsToFloat(R126i.x), intBitsToFloat(PS1i)));
R127i.y = floatBitsToInt(mul_nonIEEE(intBitsToFloat(R125i.y), intBitsToFloat(PS1i)));
R125i.z = floatBitsToInt(mul_nonIEEE(intBitsToFloat(R126i.z), intBitsToFloat(PS1i)));
R126i.w = floatBitsToInt(intBitsToFloat(uf_remappedVS[12].z) + -(1.0));
PS0i = floatBitsToInt(max(intBitsToFloat(PV1i.w), 0.0));
// 11
tempi.x = floatBitsToInt(dot(vec4(intBitsToFloat(R127i.x),intBitsToFloat(R126i.y),intBitsToFloat(R127i.z),-0.0),vec4(-(intBitsToFloat(uf_remappedVS[17].x)),-(intBitsToFloat(uf_remappedVS[17].y)),-(intBitsToFloat(uf_remappedVS[17].z)),0.0)));
tempi.x = floatBitsToInt(intBitsToFloat(tempi.x) / 2.0);
PV1i.x = tempi.x;
PV1i.y = tempi.x;
PV1i.z = tempi.x;
PV1i.w = tempi.x;
tempResultf = log2(intBitsToFloat(PS0i));
if( isinf(tempResultf) == true ) tempResultf = -3.40282347E+38F;
R124i.y = floatBitsToInt(tempResultf);
PS1i = R124i.y;
// 12
tempi.x = floatBitsToInt(dot(vec4(intBitsToFloat(uf_remappedVS[18].x),intBitsToFloat(uf_remappedVS[18].y),intBitsToFloat(uf_remappedVS[18].z),-0.0),vec4(intBitsToFloat(R125i.x),intBitsToFloat(R127i.y),intBitsToFloat(R125i.z),0.0)));
PV0i.x = tempi.x;
PV0i.y = tempi.x;
PV0i.z = tempi.x;
PV0i.w = tempi.x;
PS0i = floatBitsToInt(intBitsToFloat(PV1i.x) + 0.5);
// 13
backupReg0i = R126i.w;
R126i.x = floatBitsToInt(max(intBitsToFloat(PS0i), 0.0));
R125i.y = floatBitsToInt((mul_nonIEEE(intBitsToFloat(R6i.x),intBitsToFloat(uf_remappedVS[12].w)) + 1.0));
R127i.z = floatBitsToInt((mul_nonIEEE(intBitsToFloat(R124i.w),intBitsToFloat(uf_remappedVS[12].w)) + 1.0));
PV1i.w = floatBitsToInt(max(intBitsToFloat(PV0i.x), -(intBitsToFloat(PV0i.x))));
R126i.w = floatBitsToInt((mul_nonIEEE(intBitsToFloat(backupReg0i),intBitsToFloat(uf_remappedVS[12].w)) + 1.0));
PS1i = R126i.w;
// 14
R127i.x = floatBitsToInt(dot(vec4(intBitsToFloat(R1i.w),intBitsToFloat(R9i.x),intBitsToFloat(R1i.z),-0.0),vec4(intBitsToFloat(uf_remappedVS[13].x),intBitsToFloat(uf_remappedVS[13].y),intBitsToFloat(uf_remappedVS[13].z),0.0)));
PV0i.x = R127i.x;
PV0i.y = R127i.x;
PV0i.z = R127i.x;
PV0i.w = R127i.x;
PS0i = floatBitsToInt(-(intBitsToFloat(PV1i.w)) + 1.0);
// 15
tempi.x = floatBitsToInt(dot(vec4(intBitsToFloat(R1i.w),intBitsToFloat(R9i.x),intBitsToFloat(R1i.z),-0.0),vec4(intBitsToFloat(uf_remappedVS[14].x),intBitsToFloat(uf_remappedVS[14].y),intBitsToFloat(uf_remappedVS[14].z),0.0)));
PV1i.x = tempi.x;
PV1i.y = tempi.x;
PV1i.z = tempi.x;
PV1i.w = tempi.x;
R126i.y = tempi.x;
tempResultf = log2(intBitsToFloat(PS0i));
if( isinf(tempResultf) == true ) tempResultf = -3.40282347E+38F;
R5i.y = floatBitsToInt(tempResultf);
PS1i = R5i.y;
// 16
backupReg0i = R126i.z;
tempi.x = floatBitsToInt(dot(vec4(intBitsToFloat(R1i.w),intBitsToFloat(R9i.x),intBitsToFloat(R1i.z),-0.0),vec4(intBitsToFloat(uf_remappedVS[15].x),intBitsToFloat(uf_remappedVS[15].y),intBitsToFloat(uf_remappedVS[15].z),0.0)));
PV0i.x = tempi.x;
PV0i.y = tempi.x;
PV0i.z = tempi.x;
PV0i.w = tempi.x;
R126i.z = tempi.x;
R10i.z = floatBitsToInt(-(intBitsToFloat(backupReg0i)));
PS0i = R10i.z;
// 17
tempi.x = floatBitsToInt(dot(vec4(intBitsToFloat(R127i.x),intBitsToFloat(R126i.y),intBitsToFloat(PV0i.x),-0.0),vec4(intBitsToFloat(R127i.x),intBitsToFloat(R126i.y),intBitsToFloat(PV0i.x),0.0)));
PV1i.x = tempi.x;
PV1i.y = tempi.x;
PV1i.z = tempi.x;
PV1i.w = tempi.x;
R122i.x = floatBitsToInt((mul_nonIEEE(intBitsToFloat(R126i.x),intBitsToFloat(uf_remappedVS[19].x)) + intBitsToFloat(R125i.y)));
PS1i = R122i.x;
// 18
backupReg0i = R126i.x;
backupReg0i = R126i.x;
R126i.x = floatBitsToInt((mul_nonIEEE(intBitsToFloat(backupReg0i),intBitsToFloat(uf_remappedVS[19].z)) + intBitsToFloat(R126i.w)));
R123i.y = floatBitsToInt((mul_nonIEEE(intBitsToFloat(backupReg0i),intBitsToFloat(uf_remappedVS[19].y)) + intBitsToFloat(R127i.z)));
PV0i.y = R123i.y;
R124i.w = floatBitsToInt(intBitsToFloat(PS1i) + -(1.0));
tempResultf = 1.0 / sqrt(intBitsToFloat(PV1i.x));
R126i.w = floatBitsToInt(tempResultf);
PS0i = R126i.w;
// 19
tempi.x = floatBitsToInt(dot(vec4(intBitsToFloat(uf_remappedVS[20].x),intBitsToFloat(uf_remappedVS[20].y),intBitsToFloat(uf_remappedVS[20].z),-0.0),vec4(intBitsToFloat(R125i.x),intBitsToFloat(R127i.y),intBitsToFloat(R125i.z),0.0)));
tempi.x = clampFI32(tempi.x);
PV1i.x = tempi.x;
PV1i.y = tempi.x;
PV1i.z = tempi.x;
PV1i.w = tempi.x;
R125i.z = floatBitsToInt(intBitsToFloat(PV0i.y) + -(1.0));
PS1i = R125i.z;
// 20
PV0i.x = floatBitsToInt(mul_nonIEEE(intBitsToFloat(R124i.y), intBitsToFloat(uf_remappedVS[16].z)));
PV0i.y = floatBitsToInt(intBitsToFloat(R126i.x) + -(1.0));
R1i.z = floatBitsToInt(mul_nonIEEE(intBitsToFloat(R5i.y), intBitsToFloat(uf_remappedVS[21].w)));
R1i.w = floatBitsToInt(mul_nonIEEE(intBitsToFloat(R126i.z), intBitsToFloat(R126i.w)));
tempResultf = log2(intBitsToFloat(PV1i.x));
if( isinf(tempResultf) == true ) tempResultf = -3.40282347E+38F;
PS0i = floatBitsToInt(tempResultf);
// 21
R9i.x = floatBitsToInt((mul_nonIEEE(intBitsToFloat(R124i.w),intBitsToFloat(uf_remappedVS[19].w)) + 1.0));
R5i.y = floatBitsToInt(mul_nonIEEE(intBitsToFloat(PS0i), intBitsToFloat(uf_remappedVS[22].w)));
R6i.z = floatBitsToInt((mul_nonIEEE(intBitsToFloat(PV0i.y),intBitsToFloat(uf_remappedVS[19].w)) + 1.0));
R0i.w = floatBitsToInt((mul_nonIEEE(intBitsToFloat(R125i.z),intBitsToFloat(uf_remappedVS[19].w)) + 1.0));
R0i.z = floatBitsToInt(exp2(intBitsToFloat(PV0i.x)));
PS1i = R0i.z;
// export
passParameterSem3 = vec4(intBitsToFloat(R10i.x), intBitsToFloat(R10i.y), intBitsToFloat(R10i.z), intBitsToFloat(R10i.w));
// export
passParameterSem4 = vec4(intBitsToFloat(R1i.x), intBitsToFloat(R1i.y), intBitsToFloat(R1i.z), intBitsToFloat(R1i.z));
// 0
R126i.x = floatBitsToInt(max(intBitsToFloat(R1i.w), -(intBitsToFloat(R1i.w))));
R127i.y = floatBitsToInt(min(intBitsToFloat(R0i.z), 1.0));
R125i.z = floatBitsToInt(mul_nonIEEE(intBitsToFloat(R3i.x), intBitsToFloat(R9i.x)));
R124i.w = floatBitsToInt(mul_nonIEEE(intBitsToFloat(R3i.y), intBitsToFloat(R0i.w)));
R126i.w = floatBitsToInt(exp2(intBitsToFloat(R1i.z)));
PS0i = R126i.w;
// 1
R125i.x = floatBitsToInt(mul_nonIEEE(intBitsToFloat(R4i.x), intBitsToFloat(R9i.x)));
R124i.y = floatBitsToInt(mul_nonIEEE(intBitsToFloat(R4i.y), intBitsToFloat(R0i.w)));
R126i.z = floatBitsToInt(mul_nonIEEE(intBitsToFloat(R4i.z), intBitsToFloat(R6i.z)));
PV1i.w = floatBitsToInt(mul_nonIEEE(intBitsToFloat(R3i.z), intBitsToFloat(R6i.z)));
R127i.z = floatBitsToInt((mul_nonIEEE(intBitsToFloat(PS0i),intBitsToFloat(uf_remappedVS[21].x)) + intBitsToFloat(uf_remappedVS[23].x)));
PS1i = R127i.z;
// 2
R0i.x = floatBitsToInt(max(intBitsToFloat(R125i.z), 0.0));
R126i.y = floatBitsToInt((mul_nonIEEE(intBitsToFloat(R126i.w),intBitsToFloat(uf_remappedVS[21].y)) + intBitsToFloat(uf_remappedVS[23].y)));
R0i.z = floatBitsToInt(max(intBitsToFloat(PV1i.w), 0.0));
R0i.w = floatBitsToInt(mul_nonIEEE(intBitsToFloat(R126i.x), intBitsToFloat(R0i.y)));
R0i.y = floatBitsToInt(max(intBitsToFloat(R124i.w), 0.0));
PS0i = R0i.y;
// 3
backupReg0i = R125i.x;
R125i.x = floatBitsToInt((mul_nonIEEE(intBitsToFloat(R126i.w),intBitsToFloat(uf_remappedVS[21].z)) + intBitsToFloat(uf_remappedVS[23].z)));
R3i.y = floatBitsToInt(max(intBitsToFloat(R124i.y), 0.0));
R3i.z = floatBitsToInt(max(intBitsToFloat(R126i.z), 0.0));
R3i.w = floatBitsToInt(max(intBitsToFloat(backupReg0i), 0.0));
R126i.w = floatBitsToInt(exp2(intBitsToFloat(R5i.y)));
PS1i = R126i.w;
// 4
PV0i.x = floatBitsToInt(mul_nonIEEE(intBitsToFloat(R127i.y), intBitsToFloat(uf_remappedVS[16].w)));
R5i.y = floatBitsToInt((mul_nonIEEE(intBitsToFloat(PS1i),intBitsToFloat(uf_remappedVS[22].y)) + intBitsToFloat(R126i.y)));
R5i.x = floatBitsToInt((mul_nonIEEE(intBitsToFloat(PS1i),intBitsToFloat(uf_remappedVS[22].x)) + intBitsToFloat(R127i.z)));
PS0i = R5i.x;
// 5
R5i.z = floatBitsToInt((mul_nonIEEE(intBitsToFloat(R126i.w),intBitsToFloat(uf_remappedVS[22].z)) + intBitsToFloat(R125i.x)));
R5i.w = floatBitsToInt(mul_nonIEEE(intBitsToFloat(PV0i.x), intBitsToFloat(uf_remappedVS[17].w)));
// export
passParameterSem0 = vec4(intBitsToFloat(R0i.x), intBitsToFloat(R0i.y), intBitsToFloat(R0i.z), intBitsToFloat(R0i.w));
// export
passParameterSem2 = vec4(intBitsToFloat(R5i.x), intBitsToFloat(R5i.y), intBitsToFloat(R5i.z), intBitsToFloat(R5i.w));
// export
passParameterSem1 = vec4(intBitsToFloat(R3i.w), intBitsToFloat(R3i.y), intBitsToFloat(R3i.z), intBitsToFloat(R3i.w));
// 0
}
